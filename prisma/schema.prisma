// This is your Prisma schema file

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tasks         Task[]    @relation("TaskOwner")
  assignedTasks Task[]    @relation("TaskAssignee")
  teams         Team[]    @relation("TeamMembers")
  ownedTeams    Team[]    @relation("TeamOwner")
}

model Team {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  ownerId     String
  owner       User     @relation("TeamOwner", fields: [ownerId], references: [id])
  members     User[]   @relation("TeamMembers")
  tasks       Task[]
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  status      String    @default("todo")
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  ownerId     String
  owner       User      @relation("TaskOwner", fields: [ownerId], references: [id])
  assigneeId  String?
  assignee    User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
  teamId      String?
  team        Team?     @relation(fields: [teamId], references: [id])
  tags        Tag[]
  subtasks    Subtask[]
}

model Tag {
  id        String   @id @default(cuid())
  name      String
  color     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
}

model Subtask {
  id        String   @id @default(cuid())
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  taskId    String
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
}